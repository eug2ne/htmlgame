{"remainingRequest":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/babel-loader/lib/index.js!/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/src/components/QuizArea.vue?vue&type=template&id=150743b2","dependencies":[{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/src/components/QuizArea.vue","mtime":1639406275859},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/babel.config.js","mtime":1639146423271},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/cache-loader/dist/cjs.js","mtime":1638710602619},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/babel-loader/lib/index.js","mtime":1638710602487},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1638710607170},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/cache-loader/dist/cjs.js","mtime":1638710602619},{"path":"/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/node_modules/vue-loader-v16/dist/index.js","mtime":1638710607165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyU2xvdCBhcyBfcmVuZGVyU2xvdCwgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJy4uL2Fzc2V0cy9yZWZyZXNoLXBhZ2Utb3B0aW9uLnBuZyc7CmltcG9ydCBfaW1wb3J0c18xIGZyb20gJy4uL2Fzc2V0cy9yZXR1cm4ucG5nJzsKaW1wb3J0IF9pbXBvcnRzXzIgZnJvbSAnLi4vYXNzZXRzL25leHQucG5nJzsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJidXR0b25zIgp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogIHNyYzogX2ltcG9ydHNfMCwKICBhbHQ6ICLstIjquLDtmZQiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gW19ob2lzdGVkXzJdOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogIHNyYzogX2ltcG9ydHNfMSwKICBhbHQ6ICLrkqTroZzqsIDquLAiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF81ID0gW19ob2lzdGVkXzRdOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogIHNyYzogX2ltcG9ydHNfMiwKICBhbHQ6ICLslZ7snLzroZzqsIDquLAiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF83ID0gW19ob2lzdGVkXzZdOwp2YXIgX2hvaXN0ZWRfOCA9IHsKICByZWY6ICJ0YWJsZSIsCiAgaWQ6ICJRdWl6LWFyZWEiCn07CnZhciBfaG9pc3RlZF85ID0gWyJhcmlhLXJvd2luZGV4Il07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF9jb21wb25lbnRfRXJyb3JQb3B1cCA9IF9yZXNvbHZlQ29tcG9uZW50KCJFcnJvclBvcHVwIik7CgogIHZhciBfY29tcG9uZW50X0xldHRlciA9IF9yZXNvbHZlQ29tcG9uZW50KCJMZXR0ZXIiKTsKCiAgdmFyIF9jb21wb25lbnRfT3B0aW9uc01lbnUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiT3B0aW9uc01lbnUiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfcmVuZGVyU2xvdChfY3R4LiRzbG90cywgImRlZmF1bHQiLCB7fSwgZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMucmVmcmVzaFF1aXogJiYgJG9wdGlvbnMucmVmcmVzaFF1aXouYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICAgIH0pLAogICAgICBpZDogInJlZnJlc2hRdWl6IgogICAgfSwgX2hvaXN0ZWRfMyksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInVsIiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF9jdHguYmFjayAmJiBfY3R4LmJhY2suYXBwbHkoX2N0eCwgYXJndW1lbnRzKTsKICAgICAgfSksCiAgICAgIGlkOiAiYmFja1F1aXoiCiAgICB9LCBfaG9pc3RlZF81KSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX2N0eC5mb3J3YXJkICYmIF9jdHguZm9yd2FyZC5hcHBseShfY3R4LCBhcmd1bWVudHMpOwogICAgICB9KSwKICAgICAgaWQ6ICJmb3J3YXJkUXVpeiIKICAgIH0sIF9ob2lzdGVkXzcpXSldKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRXJyb3JQb3B1cCksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRhYmxlIiwgX2hvaXN0ZWRfOCwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHByb3BzLnF1aXpsZXR0ZXJzZXQsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJ0ciIsIHsKICAgICAgICBrZXk6IGl0ZW0uaWQsCiAgICAgICAgImFyaWEtcm93aW5kZXgiOiBpbmRleAogICAgICB9LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChpdGVtLCBmdW5jdGlvbiAodmFsdWUsIG5hbWUpIHsKICAgICAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9MZXR0ZXIsIHsKICAgICAgICAgIG9uQ2xpY2tPbkxldHRlcjogJG9wdGlvbnMudXBkYXRlVGFyZ2V0LAogICAgICAgICAgb25Ub2dnbGVDaG9pY2U6ICRvcHRpb25zLnBwQ2hvaWNlLAogICAgICAgICAgcm93SW5kZXg6IGluZGV4LAogICAgICAgICAga2V5OiBuYW1lLmlkLAogICAgICAgICAgY29sSW5kZXg6IG5hbWUsCiAgICAgICAgICBsZXR0ZXI6IHZhbHVlLmxldHRlciwKICAgICAgICAgIGlzVGFyZ2V0OiB2YWx1ZS5pc1RhcmdldCwKICAgICAgICAgIGlzQ2hvaWNlOiB2YWx1ZS5pc0Nob2ljZSwKICAgICAgICAgIGlzQ2hvc2VuOiB2YWx1ZS5pc0Nob3NlbiwKICAgICAgICAgIGlzQW5zd2VyOiB2YWx1ZS5pc0Fuc3dlciwKICAgICAgICAgIGlzV29yZDogdmFsdWUuaXNXb3JkCiAgICAgICAgfSwgbnVsbCwgOAogICAgICAgIC8qIFBST1BTICovCiAgICAgICAgLCBbIm9uQ2xpY2tPbkxldHRlciIsICJvblRvZ2dsZUNob2ljZSIsICJyb3dJbmRleCIsICJjb2xJbmRleCIsICJsZXR0ZXIiLCAiaXNUYXJnZXQiLCAiaXNDaG9pY2UiLCAiaXNDaG9zZW4iLCAiaXNBbnN3ZXIiLCAiaXNXb3JkIl0pOwogICAgICB9KSwgMTI4CiAgICAgIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgICAgICkpXSwgOAogICAgICAvKiBQUk9QUyAqLwogICAgICAsIF9ob2lzdGVkXzkpOwogICAgfSksIDEyOAogICAgLyogS0VZRURfRlJBR01FTlQgKi8KICAgICkpXSwgNTEyCiAgICAvKiBORUVEX1BBVENIICovCiAgICApXTsKICB9KSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfT3B0aW9uc01lbnUsIHsKICAgIG9uQ2xpY2tPcHRpb246ICRvcHRpb25zLnNob3dDaG9pY2UKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25DbGlja09wdGlvbiJdKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKTsKfQ=="},{"version":3,"sources":["/Users/user/coding/PAPER_htmlgame/htmlgame/new_demoggc/src/components/QuizArea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <slot>\n  <div class=\"buttons\">\n    <button @click=\"refreshQuiz\" id=\"refreshQuiz\">\n      <img src=\"../assets/refresh-page-option.png\" alt=\"초기화\">\n    </button>\n    <ul>\n      <button @click=\"back\" id=\"backQuiz\">\n        <img src=\"../assets/return.png\" alt=\"뒤로가기\">\n      </button>\n      <button @click=\"forward\" id=\"forwardQuiz\">\n        <img src=\"../assets/next.png\" alt=\"앞으로가기\">\n      </button>\n    </ul>\n  </div>\n  <ErrorPopup/>\n  <table ref=\"table\" id=\"Quiz-area\">\n    <tr v-for=\"(item, index) in quizletterset\"\n      :key=\"item.id\"\n      :aria-rowindex=\"index\">\n      <Letter\n      @clickOnLetter=\"updateTarget\"\n      @toggleChoice=\"ppChoice\"\n        :rowIndex=\"index\"\n        v-for=\"(value, name) in item\"\n        :key=\"name.id\" :colIndex=\"name\"\n        :letter=\"value.letter\"\n        :isTarget=\"value.isTarget\"\n        :isChoice=\"value.isChoice\"\n        :isChosen=\"value.isChosen\"\n        :isAnswer=\"value.isAnswer\"\n        :isWord=\"value.isWord\"\n        />\n    </tr>\n  </table>\n  </slot>\n  <OptionsMenu @clickOption=\"showChoice\"/>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport Letter from './Letter.vue'\nimport OptionsMenu from './OptionsMenu.vue'\nimport ErrorPopup from './QuizError/ErrorPopup.vue'\nimport wordlist from '../assets/wordlist.json'\nimport mergelist from '../assets/valid_mergewordlist.json'\n\nexport default {\n    name: 'QuizArea',\n    components: { Letter, OptionsMenu, ErrorPopup },\n    props: [ 'quizletterset' ],\n    data() {\n      return {\n        wordlist: wordlist,\n        mergelist: mergelist,\n        chosen: ref([]),\n        defaultSet: ref([]),\n        pastSet: ref([]),\n        maxChosen: ref(Number)\n      }\n    },\n    beforeMount() {\n      // used when refreshQuiz()\n      this.defaultSet = quizletterset\n    },\n    methods: {\n      updateTarget(data) {\n        if (this.$refs.table.querySelector('td.choice,td.chosen')&&this.quizletterset[data.row][data.col].isTarget) {\n          // forceword()\n          this.word(this.chosen)\n        } else {\n          // toggle target\n          this.quizletterset[data.row][data.col].isTarget = !this.quizletterset[data.row][data.col].isTarget\n          this.emitter.emit('toggleShow', {'show':this.quizletterset[data.row][data.col].isTarget, 'x':data.x, 'y':data.y})\n\n          if (this.quizletterset[data.row][data.col].isTarget) {\n            this.chosen.length = 0\n            this.chosen.push({'row': data.row, 'col': data.col})\n\n            for (let r=0;r<6;r++) {\n              for (let c=0;c<15;c++) {\n                if (r != data.row||c != data.col) {\n                  // reset\n                  this.quizletterset[r][c].isTarget = false\n                  this.quizletterset[r][c].isChoice = false\n                  this.quizletterset[r][c].isChosen = false\n                }\n              }\n            }\n          }\n        }\n      },\n      showChoice(data) {\n        let target = this.chosen[0]\n\n        if (data == 'merge') {\n          this.maxChosen = 2\n\n          switch (target.col) {\n            case 0:\n              this.quizletterset[target.row][target.col+1].isChoice = true\n              break\n\n            case 14:\n              this.quizletterset[target.row][target.col-1].isChoice = true\n              break\n\n            default:\n              this.quizletterset[target.row][target.col-1].isChoice = true\n              this.quizletterset[target.row][target.col+1].isChoice = true\n          }\n        } else if (data == 'word') {\n          this.maxChosen = 6\n\n          try {\n            this.quizletterset[target.row][target.col+1].isChoice = true\n            this.quizletterset[target.row+1][target.col].isChoice = true\n            this.quizletterset[target.row+1][target.col+1].isChoice = true\n            this.quizletterset[target.row+2][target.col].isChoice = true\n            this.quizletterset[target.row+2][target.col+1].isChoice = true\n          } catch (TypeError) {\n            // show error popup\n            this.emitter.emit('showPopup', 'wordspace')\n          }\n        } else {\n          // data === null\n          let wordspace = {'0,0':null, '1,0':null, '0,1':null, '1,1':null, '0,2':null, '1,2':null}\n\n          try {\n            for (let coord in wordspace) {\n            let x = parseInt(coord.split(',')[0])\n            let y = parseInt(coord.split(',')[1])\n\n            if (coord == '1,1'||this.quizletterset[target.row+y][target.col+x].letter) {\n              wordspace[coord] = null\n            } else {\n              wordspace[coord] = this.quizletterset[target.row+y][target.col+x].letter\n            }\n          }\n\n          this.space(wordspace)\n          } catch (TypeError) {\n            // show error popup\n            this.emitter.emit('showPopup', 'wordspace')\n          }\n        }\n      },\n      merge(arr) {\n        const l1 = this.quizletterset[arr[0].row][arr[0].col].letter\n        const l2 = this.quizletterset[arr[1].row][arr[1].col].letter\n\n        if (mergelist.valid[`${l1}`].includes(`${l2}`)) {\n          this.quizletterset[arr[0].row][Math.min(arr[0].col, arr[1].col)].letter = this.mergelist.merge[`${l1},${l2}`]\n          this.quizletterset[arr[0].row][Math.max(arr[0].col, arr[1].col)].letter = ''\n        } else {\n          // show error popup\n          this.emitter.emit('showPopup', 'merge')\n        }\n\n        // reset()\n        for (let r=0;r<6;r++) {\n          for (let c=0;c<15;c++) {\n              this.quizletterset[r][c].isTarget = false\n              this.quizletterset[r][c].isChoice = false\n              this.quizletterset[r][c].isChosen = false\n          }\n        }\n      },\n      word(arr) {\n        let wordspace = {'0,0':null, '1,0':null, '0,1':null, '1,1':null, '0,2':null, '1,2':null}\n\n        for (let n=0;n<arr.length;n++) {\n          \n          if (this.quizletterset[arr[n].row][arr[n].col] == '') {\n            wordspace[`${arr[n].col-arr[0].col},${arr[n].row-arr[0].row}`] = null\n          } else {\n            wordspace[`${arr[n].col-arr[0].col},${arr[n].row-arr[0].row}`] = this.quizletterset[arr[n].row][arr[n].col].letter\n          }\n        }\n\n        let index = Object.values(this.wordlist).findIndex(element => this.compare_obj(element, wordspace))\n        if (index != -1) {\n          this.quizletterset[arr[0].row][arr[0].col].letter = Object.keys(this.wordlist)[index]\n          this.quizletterset[arr[0].row][arr[0].col].isWord = true\n\n          delete this.quizletterset[arr[0].row][arr[0].col+1]\n          delete this.quizletterset[arr[0].row+1][arr[0].col]\n          delete this.quizletterset[arr[0].row+1][arr[0].col+1]\n          delete this.quizletterset[arr[0].row+2][arr[0].col]\n          delete this.quizletterset[arr[0].row+2][arr[0].col+1]\n        } else {\n          // show error popup\n          this.emitter.emit('showPopup', 'word')\n        }\n\n        // reset()\n        for (let r=0;r<6;r++) {\n          for (let c=0;c<15;c++) {\n              this.quizletterset[r][c].isTarget = false\n              this.quizletterset[r][c].isChoice = false\n              this.quizletterset[r][c].isChosen = false\n          }\n        }\n      },\n      compare_obj(a, b) {\n        // compare 2 objects\n        // if identical, return true\n        // else, return false\n\n        let n = 0;\n        let compare = true;\n        while (compare && n < 6) {\n          if (Object.values(a)[n] === Object.values(b)[n])\n            n = n + 1;\n          else\n            compare = false;\n        }\n\n        return compare;\n      },\n      ppChoice(data) {\n        if (data.action === 'push') {\n          // toggle isChoice/isChosen\n          this.quizletterset[data.choice.row][data.choice.col].isChosen = true\n          this.quizletterset[data.choice.row][data.choice.col].isChoice = false\n\n          this.chosen.push(data.choice)\n\n          if (this.chosen.length == this.maxChosen) {\n              // merge()\n              this.merge(this.chosen)\n          }\n        } else {\n          // data.type === 'pop'\n          // toggle isChoice/isChosen\n          this.quizletterset[data.choice.row][data.choice.col].isChosen = false\n          this.quizletterset[data.choice.row][data.choice.col].isChoice = true\n\n          const i = this.chosen.indexOf(data.choice)\n          this.chosen.splice(i,1)\n        }\n      },\n      space(wordspace) {\n        let target = this.chosen[0]\n\n        if (wordspace in Object.values(this.wordlist)) {\n          // show error popup\n          this.emitter.emit('showPopup', 'space')\n        } else {\n          for (let coord in wordspace) {\n            let x = parseInt(coord.split(',')[0])\n            let y = parseInt(coord.split(',')[1])\n\n            this.quizletterset[target.row+y][target.col+x].letter = ''\n          }\n        }\n      },\n      refreshQuiz() {\n        this.quizletterset = this.defaultSet\n      }\n  }\n}\n</script>"],"sourceRoot":""}]}