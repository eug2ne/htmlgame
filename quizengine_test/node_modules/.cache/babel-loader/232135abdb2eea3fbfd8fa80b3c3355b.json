{"remainingRequest":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/babel-loader/lib/index.js!/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue?vue&type=template&id=150743b2","dependencies":[{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue","mtime":1643438338271},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/babel.config.js","mtime":1642949743496},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/cache-loader/dist/cjs.js","mtime":1643433884430},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/babel-loader/lib/index.js","mtime":1643433884386},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643433886433},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/cache-loader/dist/cjs.js","mtime":1643433884430},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/index.js","mtime":1643433886432}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgeyBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CmltcG9ydCBfaW1wb3J0c18wIGZyb20gJy4uL2Fzc2V0cy9yZWZyZXNoLXBhZ2Utb3B0aW9uLnBuZyc7CmltcG9ydCBfaW1wb3J0c18xIGZyb20gJy4uL2Fzc2V0cy9yZXR1cm4ucG5nJzsKaW1wb3J0IF9pbXBvcnRzXzIgZnJvbSAnLi4vYXNzZXRzL25leHQucG5nJzsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgaWQ6ICJRdWl6QXJlYS1jb250YWluZXIiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGlkOiAiY29udHJvbHMiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgc3JjOiBfaW1wb3J0c18wLAogIGFsdDogIuy0iOq4sO2ZlCIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSBbX2hvaXN0ZWRfM107Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgc3JjOiBfaW1wb3J0c18xLAogIGFsdDogIuuSpOuhnOqwgOq4sCIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYgPSBbX2hvaXN0ZWRfNV07Cgp2YXIgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgc3JjOiBfaW1wb3J0c18yLAogIGFsdDogIuyVnuycvOuhnOqwgOq4sCIKfSwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzggPSBbX2hvaXN0ZWRfN107CnZhciBfaG9pc3RlZF85ID0gewogIHJlZjogInRhYmxlIiwKICBpZDogIlF1aXotYXJlYSIKfTsKdmFyIF9ob2lzdGVkXzEwID0gWyJhcmlhLXJvd2luZGV4Il07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgdmFyIF9jb21wb25lbnRfRXJyb3JQb3B1cCA9IF9yZXNvbHZlQ29tcG9uZW50KCJFcnJvclBvcHVwIik7CgogIHZhciBfY29tcG9uZW50X09wdGlvbnNNZW51ID0gX3Jlc29sdmVDb21wb25lbnQoIk9wdGlvbnNNZW51Iik7CgogIHZhciBfY29tcG9uZW50X0xldHRlciA9IF9yZXNvbHZlQ29tcG9uZW50KCJMZXR0ZXIiKTsKCiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnJlZnJlc2hRdWl6ICYmICRvcHRpb25zLnJlZnJlc2hRdWl6LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBpZDogInJlZnJlc2hRdWl6IgogIH0sIF9ob2lzdGVkXzQpLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMV0gfHwgKF9jYWNoZVsxXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnJldmVyc2VRdWl6ICYmICRvcHRpb25zLnJldmVyc2VRdWl6LmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBpZDogInJldmVyc2UiCiAgfSwgInJldmVyc2UiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgidWwiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgb25DbGljazogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5iYWNrICYmICRvcHRpb25zLmJhY2suYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGlkOiAiYmFja1F1aXoiCiAgfSwgX2hvaXN0ZWRfNiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVszXSB8fCAoX2NhY2hlWzNdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZm9yd2FyZCAmJiAkb3B0aW9ucy5mb3J3YXJkLmFwcGx5KCRvcHRpb25zLCBhcmd1bWVudHMpOwogICAgfSksCiAgICBpZDogImZvcndhcmRRdWl6IgogIH0sIF9ob2lzdGVkXzgpXSldKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRXJyb3JQb3B1cCwgewogICAgdHlwZTogJGRhdGEuc2hvd1BvcHVwCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInR5cGUiXSksICRkYXRhLnNob3dPcHRpb24gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soX2NvbXBvbmVudF9PcHRpb25zTWVudSwgewogICAga2V5OiAwLAogICAgeDogJGRhdGEuaGludF94LAogICAgeTogJGRhdGEuaGludF95LAogICAgb25DbGlja09wdGlvbjogJG9wdGlvbnMuc2hvdwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJ4IiwgInkiLCAib25DbGlja09wdGlvbiJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRhYmxlIiwgX2hvaXN0ZWRfOSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoT2JqZWN0LmtleXModGhpcy5xdWl6bGV0dGVyc2V0KSwgZnVuY3Rpb24gKGl0ZW0pIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInRyIiwgewogICAgICBrZXk6IGl0ZW0uaWQsCiAgICAgICJhcmlhLXJvd2luZGV4IjogaXRlbQogICAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoX3RoaXMucXVpemxldHRlcnNldFtpdGVtXSwgZnVuY3Rpb24gKHZhbHVlLCBuYW1lKSB7CiAgICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X0xldHRlciwgewogICAgICAgIG9uQ2xpY2tPbkxldHRlcjogJG9wdGlvbnMudXBkYXRlVGFyZ2V0LAogICAgICAgIG9uVG9nZ2xlQ2hvaWNlOiAkb3B0aW9ucy5wcENob2ljZSwKICAgICAgICByb3dJbmRleDogaXRlbSwKICAgICAgICBrZXk6IG5hbWUuaWQsCiAgICAgICAgY29sSW5kZXg6IG5hbWUsCiAgICAgICAgbGV0dGVyOiB2YWx1ZS5sZXR0ZXIsCiAgICAgICAgaXNUYXJnZXQ6IHZhbHVlLmlzVGFyZ2V0LAogICAgICAgIGlzQ2hvaWNlOiB2YWx1ZS5pc0Nob2ljZSwKICAgICAgICBpc0Nob3NlbjogdmFsdWUuaXNDaG9zZW4sCiAgICAgICAgaXNBbnN3ZXI6IHZhbHVlLmlzQW5zd2VyLAogICAgICAgIGlzV29yZDogdmFsdWUuaXNXb3JkCiAgICAgIH0sIG51bGwsIDgKICAgICAgLyogUFJPUFMgKi8KICAgICAgLCBbIm9uQ2xpY2tPbkxldHRlciIsICJvblRvZ2dsZUNob2ljZSIsICJyb3dJbmRleCIsICJjb2xJbmRleCIsICJsZXR0ZXIiLCAiaXNUYXJnZXQiLCAiaXNDaG9pY2UiLCAiaXNDaG9zZW4iLCAiaXNBbnN3ZXIiLCAiaXNXb3JkIl0pOwogICAgfSksIDEyOAogICAgLyogS0VZRURfRlJBR01FTlQgKi8KICAgICkpXSwgOAogICAgLyogUFJPUFMgKi8KICAgICwgX2hvaXN0ZWRfMTApOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICldKTsKfQ=="},{"version":3,"sources":["/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"QuizArea-container\">\n    <div id=\"controls\">\n    <button @click=\"refreshQuiz\" id=\"refreshQuiz\">\n      <img src=\"../assets/refresh-page-option.png\" alt=\"초기화\">\n    </button>\n    <button @click=\"reverseQuiz\" id=\"reverse\">reverse</button>\n    <ul>\n      <button @click=\"back\" id=\"backQuiz\">\n        <img src=\"../assets/return.png\" alt=\"뒤로가기\">\n      </button>\n      <button @click=\"forward\" id=\"forwardQuiz\">\n        <img src=\"../assets/next.png\" alt=\"앞으로가기\">\n      </button>\n    </ul>\n    </div>\n    <ErrorPopup :type=\"showPopup\"/>\n    <OptionsMenu v-if=\"showOption\" :x=\"hint_x\" :y=\"hint_y\"\n      @clickOption=\"show\"/>\n    <table ref=\"table\" id=\"Quiz-area\">\n      <tr v-for=\"item in Object.keys(this.quizletterset)\"\n        :key=\"item.id\"\n        :aria-rowindex=\"item\">\n        <Letter\n          @clickOnLetter=\"updateTarget\"\n          @toggleChoice=\"ppChoice\"\n          :rowIndex=\"item\"\n          v-for=\"(value, name) in this.quizletterset[item]\"\n          :key=\"name.id\" :colIndex=\"name\"\n          :letter=\"value.letter\"\n          :isTarget=\"value.isTarget\"\n          :isChoice=\"value.isChoice\"\n          :isChosen=\"value.isChosen\"\n          :isAnswer=\"value.isAnswer\"\n          :isWord=\"value.isWord\"\n        />\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { db } from '../firestoreDB'\nimport _ from 'lodash'\nimport { doc, getDoc, setDoc, onSnapshot } from 'firebase/firestore'\nimport Letter from './Letter.vue'\nimport OptionsMenu from './OptionsMenu.vue'\nimport ErrorPopup from './QuizError/ErrorPopup.vue'\nimport quiz from '../composables/quiz'\nimport importSet from '../composables/quizlibrary/importSet'\nimport exportSet from '../composables/quizlibrary/exportSet'\n\nexport default {\n    name: 'QuizArea',\n    components: { Letter, OptionsMenu, ErrorPopup },\n    props: [ 'id', 'set', 'user' ],\n    data() {\n      return {\n        showOption: false,\n        hint_x: null,\n        hint_y: null,\n        showPopup: null\n      }\n    },\n    setup(props) {\n      console.log('setup')\n      console.log(props.user)\n      const d_Set = ref({})\n      const u_id = ref()\n      const q_instance = ref({})\n      const quizletterset = ref({})\n\n      if (props.set) {\n        // if set imported, quizletterset = set\n        d_Set.value = props.set\n        quizletterset.value = _.cloneDeep(d_Set.value)\n        q_instance.value = {\n          'id':props.id,\n          'quizletterset': quizletterset.value,\n          'chosen': [],\n          'reverse': false,\n          'max_chosen': 6,\n          'backset': [],\n          'forwardset': []\n        }\n      } else {\n        // else, import set from db\n        \n        // create async load func.\n        const load = async (id, user) => {\n            const {\n              defaultSet,\n              user_id,\n              quizinstance\n            } = await importSet(id, user)\n\n            d_Set.value = defaultSet.value\n            u_id.value = user_id\n            q_instance.value = quizinstance\n            quizletterset.value = q_instance.value.quizletterset\n        }\n        \n        // load data from db\n        load(props.id, props.user)\n      }\n\n      return {\n        d_Set,\n        u_id,\n        q_instance,\n        quizletterset\n      }\n    },\n    methods: {\n      updateTarget(data) {\n        if (this.$refs.table.querySelector('td.choice,td.chosen')&&this.quizletterset[data.row][data.col].isTarget) {\n          // word()\n          try {\n            quiz({'event':'Word'}, this.q_instance)\n          } catch (error) {\n            // WordError\n            console.log(error.message)\n            this.showPopup = 'word'\n          }\n        } else {\n          // toggle target\n          quiz({'event':'toggleTarget', 'row':data.row, 'col':data.col, 'letter':data.letter},\n            this.q_instance)\n\n          // toggle showHint\n          this.showOption = this.quizletterset[data.row][data.col].isTarget\n          this.hint_x = data.x\n          this.hint_y = data.y\n        }\n      },\n      ppChoice(data) {\n        try {\n          quiz({'event':'ppChoice', 'action':data.action, 'choice':data.choice},\n          this.q_instance)\n        } catch (error) {\n          // MergeError\n          console.log(error.message)\n          this.showPopup = 'merge'\n        }\n      },\n      show(data) {\n        this.showOption = false\n        switch (data.option) {\n          case ('merge'):\n            quiz({'event':'showMerge'}, this.q_instance, this.quizletterset)\n            break\n          \n          case('word'):\n            try {\n              quiz({'event':'showWord'}, this.q_instance, this.quizletterset)\n            } catch (error) {\n              // WordSpaceError\n              this.showPopup = 'wordspace'\n            }\n            break\n\n          default:\n            try {\n              quiz({'event':'Space'}, this.q_instance, this.quizletterset)\n            } catch (error) {\n              console.log(error.message)\n              if (error.message == 'WordspaceError') {\n                // WordSpaceError\n                this.showPopup = 'wordspace'\n              } else {\n                // SpaceError\n                this.showPopup = 'space'\n              }\n            }\n            break\n        }\n      },\n      refreshQuiz() {\n        // set quizletterset to default\n        this.quizletterset = _.cloneDeep(this.d_Set)\n      },\n      reverseQuiz() {\n        // switch engine\n        this.q_instance.reverse = !this.q_instance.reverse\n      },\n      back() {\n        // backquiz()\n        try {\n          quiz({'event':'backQuiz'}, this.q_instance)\n          this.quizletterset = this.q_instance.quizletterset\n        } catch (error) {\n          // IndexError\n        }\n      },\n      forward() {\n        // forwardquiz()\n        try {\n          quiz({'event':'forwardQuiz'}, this.q_instance)\n          this.quizletterset = this.q_instance.quizletterset\n        } catch (error) {\n          // IndexError\n        }\n      }\n  },\n  beforeUnmounted() {\n    // update db when component destroyed\n    // exportSet({ quizinstance }, this.user)\n  }\n}\n</script>"],"sourceRoot":""}]}