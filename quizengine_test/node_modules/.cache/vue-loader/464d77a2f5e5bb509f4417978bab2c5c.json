{"remainingRequest":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue?vue&type=template&id=150743b2","dependencies":[{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue","mtime":1643438338271},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/cache-loader/dist/cjs.js","mtime":1643433884430},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/babel-loader/lib/index.js","mtime":1643433884386},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1643433886433},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/cache-loader/dist/cjs.js","mtime":1643433884430},{"path":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/node_modules/vue-loader-v16/dist/index.js","mtime":1643433886432}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBpZD0iUXVpekFyZWEtY29udGFpbmVyIj4KICAgIDxkaXYgaWQ9ImNvbnRyb2xzIj4KICAgIDxidXR0b24gQGNsaWNrPSJyZWZyZXNoUXVpeiIgaWQ9InJlZnJlc2hRdWl6Ij4KICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9yZWZyZXNoLXBhZ2Utb3B0aW9uLnBuZyIgYWx0PSLstIjquLDtmZQiPgogICAgPC9idXR0b24+CiAgICA8YnV0dG9uIEBjbGljaz0icmV2ZXJzZVF1aXoiIGlkPSJyZXZlcnNlIj5yZXZlcnNlPC9idXR0b24+CiAgICA8dWw+CiAgICAgIDxidXR0b24gQGNsaWNrPSJiYWNrIiBpZD0iYmFja1F1aXoiPgogICAgICAgIDxpbWcgc3JjPSIuLi9hc3NldHMvcmV0dXJuLnBuZyIgYWx0PSLrkqTroZzqsIDquLAiPgogICAgICA8L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBAY2xpY2s9ImZvcndhcmQiIGlkPSJmb3J3YXJkUXVpeiI+CiAgICAgICAgPGltZyBzcmM9Ii4uL2Fzc2V0cy9uZXh0LnBuZyIgYWx0PSLslZ7snLzroZzqsIDquLAiPgogICAgICA8L2J1dHRvbj4KICAgIDwvdWw+CiAgICA8L2Rpdj4KICAgIDxFcnJvclBvcHVwIDp0eXBlPSJzaG93UG9wdXAiLz4KICAgIDxPcHRpb25zTWVudSB2LWlmPSJzaG93T3B0aW9uIiA6eD0iaGludF94IiA6eT0iaGludF95IgogICAgICBAY2xpY2tPcHRpb249InNob3ciLz4KICAgIDx0YWJsZSByZWY9InRhYmxlIiBpZD0iUXVpei1hcmVhIj4KICAgICAgPHRyIHYtZm9yPSJpdGVtIGluIE9iamVjdC5rZXlzKHRoaXMucXVpemxldHRlcnNldCkiCiAgICAgICAgOmtleT0iaXRlbS5pZCIKICAgICAgICA6YXJpYS1yb3dpbmRleD0iaXRlbSI+CiAgICAgICAgPExldHRlcgogICAgICAgICAgQGNsaWNrT25MZXR0ZXI9InVwZGF0ZVRhcmdldCIKICAgICAgICAgIEB0b2dnbGVDaG9pY2U9InBwQ2hvaWNlIgogICAgICAgICAgOnJvd0luZGV4PSJpdGVtIgogICAgICAgICAgdi1mb3I9Iih2YWx1ZSwgbmFtZSkgaW4gdGhpcy5xdWl6bGV0dGVyc2V0W2l0ZW1dIgogICAgICAgICAgOmtleT0ibmFtZS5pZCIgOmNvbEluZGV4PSJuYW1lIgogICAgICAgICAgOmxldHRlcj0idmFsdWUubGV0dGVyIgogICAgICAgICAgOmlzVGFyZ2V0PSJ2YWx1ZS5pc1RhcmdldCIKICAgICAgICAgIDppc0Nob2ljZT0idmFsdWUuaXNDaG9pY2UiCiAgICAgICAgICA6aXNDaG9zZW49InZhbHVlLmlzQ2hvc2VuIgogICAgICAgICAgOmlzQW5zd2VyPSJ2YWx1ZS5pc0Fuc3dlciIKICAgICAgICAgIDppc1dvcmQ9InZhbHVlLmlzV29yZCIKICAgICAgICAvPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4K"},{"version":3,"sources":["/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue"],"names":[],"mappings":"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","file":"/Users/eugenekang/Documents/GitHub/htmlgame/quizengine_test/src/components/QuizArea.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"QuizArea-container\">\n    <div id=\"controls\">\n    <button @click=\"refreshQuiz\" id=\"refreshQuiz\">\n      <img src=\"../assets/refresh-page-option.png\" alt=\"초기화\">\n    </button>\n    <button @click=\"reverseQuiz\" id=\"reverse\">reverse</button>\n    <ul>\n      <button @click=\"back\" id=\"backQuiz\">\n        <img src=\"../assets/return.png\" alt=\"뒤로가기\">\n      </button>\n      <button @click=\"forward\" id=\"forwardQuiz\">\n        <img src=\"../assets/next.png\" alt=\"앞으로가기\">\n      </button>\n    </ul>\n    </div>\n    <ErrorPopup :type=\"showPopup\"/>\n    <OptionsMenu v-if=\"showOption\" :x=\"hint_x\" :y=\"hint_y\"\n      @clickOption=\"show\"/>\n    <table ref=\"table\" id=\"Quiz-area\">\n      <tr v-for=\"item in Object.keys(this.quizletterset)\"\n        :key=\"item.id\"\n        :aria-rowindex=\"item\">\n        <Letter\n          @clickOnLetter=\"updateTarget\"\n          @toggleChoice=\"ppChoice\"\n          :rowIndex=\"item\"\n          v-for=\"(value, name) in this.quizletterset[item]\"\n          :key=\"name.id\" :colIndex=\"name\"\n          :letter=\"value.letter\"\n          :isTarget=\"value.isTarget\"\n          :isChoice=\"value.isChoice\"\n          :isChosen=\"value.isChosen\"\n          :isAnswer=\"value.isAnswer\"\n          :isWord=\"value.isWord\"\n        />\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { db } from '../firestoreDB'\nimport _ from 'lodash'\nimport { doc, getDoc, setDoc, onSnapshot } from 'firebase/firestore'\nimport Letter from './Letter.vue'\nimport OptionsMenu from './OptionsMenu.vue'\nimport ErrorPopup from './QuizError/ErrorPopup.vue'\nimport quiz from '../composables/quiz'\nimport importSet from '../composables/quizlibrary/importSet'\nimport exportSet from '../composables/quizlibrary/exportSet'\n\nexport default {\n    name: 'QuizArea',\n    components: { Letter, OptionsMenu, ErrorPopup },\n    props: [ 'id', 'set', 'user' ],\n    data() {\n      return {\n        showOption: false,\n        hint_x: null,\n        hint_y: null,\n        showPopup: null\n      }\n    },\n    setup(props) {\n      console.log('setup')\n      console.log(props.user)\n      const d_Set = ref({})\n      const u_id = ref()\n      const q_instance = ref({})\n      const quizletterset = ref({})\n\n      if (props.set) {\n        // if set imported, quizletterset = set\n        d_Set.value = props.set\n        quizletterset.value = _.cloneDeep(d_Set.value)\n        q_instance.value = {\n          'id':props.id,\n          'quizletterset': quizletterset.value,\n          'chosen': [],\n          'reverse': false,\n          'max_chosen': 6,\n          'backset': [],\n          'forwardset': []\n        }\n      } else {\n        // else, import set from db\n        \n        // create async load func.\n        const load = async (id, user) => {\n            const {\n              defaultSet,\n              user_id,\n              quizinstance\n            } = await importSet(id, user)\n\n            d_Set.value = defaultSet.value\n            u_id.value = user_id\n            q_instance.value = quizinstance\n            quizletterset.value = q_instance.value.quizletterset\n        }\n        \n        // load data from db\n        load(props.id, props.user)\n      }\n\n      return {\n        d_Set,\n        u_id,\n        q_instance,\n        quizletterset\n      }\n    },\n    methods: {\n      updateTarget(data) {\n        if (this.$refs.table.querySelector('td.choice,td.chosen')&&this.quizletterset[data.row][data.col].isTarget) {\n          // word()\n          try {\n            quiz({'event':'Word'}, this.q_instance)\n          } catch (error) {\n            // WordError\n            console.log(error.message)\n            this.showPopup = 'word'\n          }\n        } else {\n          // toggle target\n          quiz({'event':'toggleTarget', 'row':data.row, 'col':data.col, 'letter':data.letter},\n            this.q_instance)\n\n          // toggle showHint\n          this.showOption = this.quizletterset[data.row][data.col].isTarget\n          this.hint_x = data.x\n          this.hint_y = data.y\n        }\n      },\n      ppChoice(data) {\n        try {\n          quiz({'event':'ppChoice', 'action':data.action, 'choice':data.choice},\n          this.q_instance)\n        } catch (error) {\n          // MergeError\n          console.log(error.message)\n          this.showPopup = 'merge'\n        }\n      },\n      show(data) {\n        this.showOption = false\n        switch (data.option) {\n          case ('merge'):\n            quiz({'event':'showMerge'}, this.q_instance, this.quizletterset)\n            break\n          \n          case('word'):\n            try {\n              quiz({'event':'showWord'}, this.q_instance, this.quizletterset)\n            } catch (error) {\n              // WordSpaceError\n              this.showPopup = 'wordspace'\n            }\n            break\n\n          default:\n            try {\n              quiz({'event':'Space'}, this.q_instance, this.quizletterset)\n            } catch (error) {\n              console.log(error.message)\n              if (error.message == 'WordspaceError') {\n                // WordSpaceError\n                this.showPopup = 'wordspace'\n              } else {\n                // SpaceError\n                this.showPopup = 'space'\n              }\n            }\n            break\n        }\n      },\n      refreshQuiz() {\n        // set quizletterset to default\n        this.quizletterset = _.cloneDeep(this.d_Set)\n      },\n      reverseQuiz() {\n        // switch engine\n        this.q_instance.reverse = !this.q_instance.reverse\n      },\n      back() {\n        // backquiz()\n        try {\n          quiz({'event':'backQuiz'}, this.q_instance)\n          this.quizletterset = this.q_instance.quizletterset\n        } catch (error) {\n          // IndexError\n        }\n      },\n      forward() {\n        // forwardquiz()\n        try {\n          quiz({'event':'forwardQuiz'}, this.q_instance)\n          this.quizletterset = this.q_instance.quizletterset\n        } catch (error) {\n          // IndexError\n        }\n      }\n  },\n  beforeUnmounted() {\n    // update db when component destroyed\n    // exportSet({ quizinstance }, this.user)\n  }\n}\n</script>"]}]}